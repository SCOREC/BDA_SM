apiVersion: apps/v1
kind: Deployment
metadata:
  name: training-manager-deployment
  labels:
    app: training-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: training-manager
  template:
    metadata:
      labels:
        app: training-manager
    spec:
      containers:
      - name: training-manager
        image: mk/training_manager
        command: [venv/bin/python]
        args: ["training_manager.py"]
        imagePullPolicy: Never
        ports:
         - containerPort: 5000
        env: 
          - name: FETCHER_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: bda-configmap
                key: FETCHER_BASE_URL
          - name: INFERENCE_MANAGER_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: bda-configmap
                key: INFERENCE_MANAGER_BASE_URL
          - name: RESULTS_CACHE_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: bda-configmap
                key: RESULTS_CACHE_BASE_URL          
          - name: SAMPLER_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: bda-configmap
                key: SAMPLER_BASE_URL
          - name: TRAINING_MANAGER_BASE_URL
            valueFrom:
              configMapKeyRef:
                name: bda-configmap
                key: TRAINING_MANAGER_BASE_URL
          - name: TRAINER_WORKING_DIRECTORY
            value: ./trainer
          - name: TRAINING_MANAGER_PORT
            value: "5000"
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: training-manager-service
spec:
  selector:
    app: training-manager
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000